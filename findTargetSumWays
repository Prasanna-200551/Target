import java.util.*;

public class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int totalSum = 0;
        for (int num : nums) {
            totalSum += num;
        }

        // If target + totalSum is odd or target is out of bounds
        if ((target + totalSum) % 2 != 0 || Math.abs(target) > totalSum) {
            return 0;
        }

        int sum = (target + totalSum) / 2;

        int[] dp = new int[sum + 1];
        dp[0] = 1;  // One way to reach sum 0 â€” by choosing nothing

        for (int num : nums) {
            for (int j = sum; j >= num; j--) {
                dp[j] += dp[j - num];
            }
        }

        return dp[sum];
    }

    // Main method to test the solution
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter the number of elements:");
        int n = scanner.nextInt();

        int[] nums = new int[n];
        System.out.println("Enter the elements:");
        for (int i = 0; i < n; i++) {
            nums[i] = scanner.nextInt();
        }

        System.out.println("Enter the target sum:");
        int target = scanner.nextInt();

        Solution sol = new Solution();
        int ways = sol.findTargetSumWays(nums, target);

        System.out.println("Number of ways to reach target sum: " + ways);
    }
}
